///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ParsedResultsPlusCode {
  String? compoundCode;
  String? globalCode;

  ParsedResultsPlusCode({
    this.compoundCode,
    this.globalCode,
  });
  ParsedResultsPlusCode.fromJson(Map<String, dynamic> json) {
    compoundCode = json['compound_code']?.toString();
    globalCode = json['global_code']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['compound_code'] = compoundCode;
    data['global_code'] = globalCode;
    return data;
  }
}

class ParsedResultsPhotos {
  ParsedResultsPhotos({
    required this.height,
    required this.htmlAttributions,
    required this.photoReference,
    required this.width,
  });
  late final int height;
  late final List<String> htmlAttributions;
  late final String photoReference;
  late final int width;

  ParsedResultsPhotos.fromJson(Map<String, dynamic> json) {
    height = json['height'];
    htmlAttributions =
        List.castFrom<dynamic, String>(json['html_attributions']);
    photoReference = json['photo_reference'];
    width = json['width'];
  }
}

class ParsedResultsOpeningHours {
/*
{
  "open_now": false
} 
*/

  bool? openNow;

  ParsedResultsOpeningHours({
    this.openNow,
  });
  ParsedResultsOpeningHours.fromJson(Map<String, dynamic> json) {
    openNow = json['open_now'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['open_now'] = openNow;
    return data;
  }
}

class ParsedResultsGeometryViewportSouthwest {
/*
{
  "lat": 30.09157387010727,
  "lng": 31.33111427010727
} 
*/

  double? lat;
  double? lng;

  ParsedResultsGeometryViewportSouthwest({
    this.lat,
    this.lng,
  });
  ParsedResultsGeometryViewportSouthwest.fromJson(Map<String, dynamic> json) {
    lat = json['lat']?.toDouble();
    lng = json['lng']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['lat'] = lat;
    data['lng'] = lng;
    return data;
  }
}

class ParsedResultsGeometryViewportNortheast {
  double? lat;
  double? lng;

  ParsedResultsGeometryViewportNortheast({
    this.lat,
    this.lng,
  });
  ParsedResultsGeometryViewportNortheast.fromJson(Map<String, dynamic> json) {
    lat = json['lat']?.toDouble();
    lng = json['lng']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['lat'] = lat;
    data['lng'] = lng;
    return data;
  }
}

class ParsedResultsGeometryViewport {
  ParsedResultsGeometryViewportNortheast? northeast;
  ParsedResultsGeometryViewportSouthwest? southwest;

  ParsedResultsGeometryViewport({
    this.northeast,
    this.southwest,
  });
  ParsedResultsGeometryViewport.fromJson(Map<String, dynamic> json) {
    northeast = (json['northeast'] != null)
        ? ParsedResultsGeometryViewportNortheast.fromJson(json['northeast'])
        : null;
    southwest = (json['southwest'] != null)
        ? ParsedResultsGeometryViewportSouthwest.fromJson(json['southwest'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (northeast != null) {
      data['northeast'] = northeast!.toJson();
    }
    if (southwest != null) {
      data['southwest'] = southwest!.toJson();
    }
    return data;
  }
}

class ParsedResultsGeometryLocation {
  double? lat;
  double? lng;

  ParsedResultsGeometryLocation({
    this.lat,
    this.lng,
  });
  ParsedResultsGeometryLocation.fromJson(Map<String, dynamic> json) {
    lat = json['lat']?.toDouble();
    lng = json['lng']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['lat'] = lat;
    data['lng'] = lng;
    return data;
  }
}

class ParsedResultsGeometry {
  ParsedResultsGeometryLocation? location;
  ParsedResultsGeometryViewport? viewport;

  ParsedResultsGeometry({
    this.location,
    this.viewport,
  });
  ParsedResultsGeometry.fromJson(Map<String, dynamic> json) {
    location = (json['location'] != null)
        ? ParsedResultsGeometryLocation.fromJson(json['location'])
        : null;
    viewport = (json['viewport'] != null)
        ? ParsedResultsGeometryViewport.fromJson(json['viewport'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (location != null) {
      data['location'] = location!.toJson();
    }
    if (viewport != null) {
      data['viewport'] = viewport!.toJson();
    }
    return data;
  }
}

class ParsedResults {
  String? businessStatus;
  ParsedResultsGeometry? geometry;
  String? icon;
  String? iconBackgroundColor;
  String? iconMaskBaseUri;
  String? name;
  ParsedResultsOpeningHours? openingHours;
  late final List<ParsedResultsPhotos> photos;

  String? placeId;
  ParsedResultsPlusCode? plusCode;
  double? rating;
  String? reference;
  String? scope;
  List<String?>? types;
  int? userRatingsTotal;
  String? vicinity;

  ParsedResults({
    this.businessStatus,
    this.geometry,
    this.icon,
    this.iconBackgroundColor,
    this.iconMaskBaseUri,
    this.name,
    this.openingHours,
    required this.photos,
    this.placeId,
    this.plusCode,
    this.rating,
    this.reference,
    this.scope,
    this.types,
    this.userRatingsTotal,
    this.vicinity,
  });
  ParsedResults.fromJson(Map<String, dynamic> json) {
    businessStatus = json['business_status']?.toString();
    geometry = (json['geometry'] != null)
        ? ParsedResultsGeometry.fromJson(json['geometry'])
        : null;
    icon = json['icon']?.toString();
    iconBackgroundColor = json['icon_background_color']?.toString();
    iconMaskBaseUri = json['icon_mask_base_uri']?.toString();
    name = json['name']?.toString();
    openingHours = (json['opening_hours'] != null)
        ? ParsedResultsOpeningHours.fromJson(json['opening_hours'])
        : null;
    if (json['photos'] != null) {
      photos = <ParsedResultsPhotos>[];
      json['photos'].forEach((v) {
        photos.add(ParsedResultsPhotos.fromJson(v));
      });
    }
    placeId = json['place_id']?.toString();
    plusCode = (json['plus_code'] != null)
        ? ParsedResultsPlusCode.fromJson(json['plus_code'])
        : null;
    rating = json['rating']?.toDouble();
    reference = json['reference']?.toString();
    scope = json['scope']?.toString();
    if (json['types'] != null) {
      final v = json['types'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      types = arr0;
    }
    userRatingsTotal = json['user_ratings_total']?.toInt();
    vicinity = json['vicinity']?.toString();
  }
}
